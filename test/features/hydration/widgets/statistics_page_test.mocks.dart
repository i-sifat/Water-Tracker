// Mocks generated by Mockito 5.4.6 from annotations
// in watertracker/test/features/hydration/widgets/statistics_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i8;

import 'package:flutter/material.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:watertracker/core/models/custom_drink_type.dart' as _i4;
import 'package:watertracker/core/models/hydration_data.dart' as _i3;
import 'package:watertracker/features/hydration/providers/hydration_provider.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [HydrationProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockHydrationProvider extends _i1.Mock implements _i2.HydrationProvider {
  MockHydrationProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get currentIntake =>
      (super.noSuchMethod(Invocation.getter(#currentIntake), returnValue: 0)
          as int);

  @override
  int get dailyGoal =>
      (super.noSuchMethod(Invocation.getter(#dailyGoal), returnValue: 0)
          as int);

  @override
  int get remainingIntake =>
      (super.noSuchMethod(Invocation.getter(#remainingIntake), returnValue: 0)
          as int);

  @override
  double get intakePercentage =>
      (super.noSuchMethod(
            Invocation.getter(#intakePercentage),
            returnValue: 0.0,
          )
          as double);

  @override
  _i2.AvatarOption get selectedAvatar =>
      (super.noSuchMethod(
            Invocation.getter(#selectedAvatar),
            returnValue: _i2.AvatarOption.male,
          )
          as _i2.AvatarOption);

  @override
  bool get goalReachedToday =>
      (super.noSuchMethod(
            Invocation.getter(#goalReachedToday),
            returnValue: false,
          )
          as bool);

  @override
  bool get isInitialized =>
      (super.noSuchMethod(Invocation.getter(#isInitialized), returnValue: false)
          as bool);

  @override
  bool get hasReachedDailyGoal =>
      (super.noSuchMethod(
            Invocation.getter(#hasReachedDailyGoal),
            returnValue: false,
          )
          as bool);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get isSyncing =>
      (super.noSuchMethod(Invocation.getter(#isSyncing), returnValue: false)
          as bool);

  @override
  List<_i3.HydrationData> get hydrationHistory =>
      (super.noSuchMethod(
            Invocation.getter(#hydrationHistory),
            returnValue: <_i3.HydrationData>[],
          )
          as List<_i3.HydrationData>);

  @override
  List<_i3.HydrationData> get todaysEntries =>
      (super.noSuchMethod(
            Invocation.getter(#todaysEntries),
            returnValue: <_i3.HydrationData>[],
          )
          as List<_i3.HydrationData>);

  @override
  int get currentStreak =>
      (super.noSuchMethod(Invocation.getter(#currentStreak), returnValue: 0)
          as int);

  @override
  int get longestStreak =>
      (super.noSuchMethod(Invocation.getter(#longestStreak), returnValue: 0)
          as int);

  @override
  List<_i4.CustomDrinkType> get customDrinkTypes =>
      (super.noSuchMethod(
            Invocation.getter(#customDrinkTypes),
            returnValue: <_i4.CustomDrinkType>[],
          )
          as List<_i4.CustomDrinkType>);

  @override
  bool get healthSyncEnabled =>
      (super.noSuchMethod(
            Invocation.getter(#healthSyncEnabled),
            returnValue: false,
          )
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> addHydration(
    int? amount, {
    _i3.DrinkType? type = _i3.DrinkType.water,
    String? notes,
    _i6.BuildContext? context,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addHydration,
              [amount],
              {#type: type, #notes: notes, #context: context},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> editHydrationEntry(
    String? entryId, {
    int? amount,
    _i3.DrinkType? type,
    String? notes,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #editHydrationEntry,
              [entryId],
              {#amount: amount, #type: type, #notes: notes},
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteHydrationEntry(String? entryId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteHydrationEntry, [entryId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<_i3.HydrationData> getEntriesForDate(DateTime? date) =>
      (super.noSuchMethod(
            Invocation.method(#getEntriesForDate, [date]),
            returnValue: <_i3.HydrationData>[],
          )
          as List<_i3.HydrationData>);

  @override
  List<_i3.HydrationData> getEntriesForDateRange(
    DateTime? start,
    DateTime? end,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getEntriesForDateRange, [start, end]),
            returnValue: <_i3.HydrationData>[],
          )
          as List<_i3.HydrationData>);

  @override
  Map<DateTime, int> getWeeklyData(DateTime? weekStart) =>
      (super.noSuchMethod(
            Invocation.method(#getWeeklyData, [weekStart]),
            returnValue: <DateTime, int>{},
          )
          as Map<DateTime, int>);

  @override
  Map<DateTime, int> getMonthlyData(DateTime? month) =>
      (super.noSuchMethod(
            Invocation.method(#getMonthlyData, [month]),
            returnValue: <DateTime, int>{},
          )
          as Map<DateTime, int>);

  @override
  double getGoalAchievementRate(DateTime? start, DateTime? end) =>
      (super.noSuchMethod(
            Invocation.method(#getGoalAchievementRate, [start, end]),
            returnValue: 0.0,
          )
          as double);

  @override
  _i5.Future<String> exportData({
    DateTime? startDate,
    DateTime? endDate,
    String? format = 'csv',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#exportData, [], {
              #startDate: startDate,
              #endDate: endDate,
              #format: format,
            }),
            returnValue: _i5.Future<String>.value(
              _i7.dummyValue<String>(
                this,
                Invocation.method(#exportData, [], {
                  #startDate: startDate,
                  #endDate: endDate,
                  #format: format,
                }),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<void> syncData() =>
      (super.noSuchMethod(
            Invocation.method(#syncData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setDailyGoal(int? goal) =>
      (super.noSuchMethod(
            Invocation.method(#setDailyGoal, [goal]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setAvatar(_i2.AvatarOption? avatar) =>
      (super.noSuchMethod(
            Invocation.method(#setAvatar, [avatar]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> resetIntake() =>
      (super.noSuchMethod(
            Invocation.method(#resetIntake, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void addIntake(int? amount) => super.noSuchMethod(
    Invocation.method(#addIntake, [amount]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> loadData() =>
      (super.noSuchMethod(
            Invocation.method(#loadData, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadCustomDrinkTypes() =>
      (super.noSuchMethod(
            Invocation.method(#loadCustomDrinkTypes, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> saveCustomDrinkTypes() =>
      (super.noSuchMethod(
            Invocation.method(#saveCustomDrinkTypes, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> addCustomDrinkType(_i4.CustomDrinkType? drinkType) =>
      (super.noSuchMethod(
            Invocation.method(#addCustomDrinkType, [drinkType]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> updateCustomDrinkType(_i4.CustomDrinkType? drinkType) =>
      (super.noSuchMethod(
            Invocation.method(#updateCustomDrinkType, [drinkType]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> deleteCustomDrinkType(String? drinkTypeId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteCustomDrinkType, [drinkTypeId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<dynamic> getAllDrinkTypes() =>
      (super.noSuchMethod(
            Invocation.method(#getAllDrinkTypes, []),
            returnValue: <dynamic>[],
          )
          as List<dynamic>);

  @override
  _i5.Future<void> addHydrationWithCustomType(
    int? amount, {
    _i4.CustomDrinkType? customType,
    _i3.DrinkType? builtInType,
    String? notes,
    _i6.BuildContext? context,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #addHydrationWithCustomType,
              [amount],
              {
                #customType: customType,
                #builtInType: builtInType,
                #notes: notes,
                #context: context,
              },
            ),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> setHealthSyncEnabled({required bool? enabled}) =>
      (super.noSuchMethod(
            Invocation.method(#setHealthSyncEnabled, [], {#enabled: enabled}),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> syncToHealthApp() =>
      (super.noSuchMethod(
            Invocation.method(#syncToHealthApp, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> importFromHealthApp({
    DateTime? startDate,
    DateTime? endDate,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#importFromHealthApp, [], {
              #startDate: startDate,
              #endDate: endDate,
            }),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<Map<String, dynamic>> getHealthSyncStats() =>
      (super.noSuchMethod(
            Invocation.method(#getHealthSyncStats, []),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<void> loadHealthSyncSettings() =>
      (super.noSuchMethod(
            Invocation.method(#loadHealthSyncSettings, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
